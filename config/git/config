[diff]
    tool = nvimdiff
    colorMoved = zebra
[difftool "nvimdiff"]
    cmd = "nvim -d \"$LOCAL\" \"$REMOTE\""
[difftool]
    prompt = false
[user]
    name = Kieran O'Hara
[credential]
[core]
    filemode = false
    pager = less -F -X
[merge]
[mergetool]
    prompt = false
[color]
    ui = auto
[push]
    default = upstream
    autoSetupRemote = true
[rebase]
    instructionFormat = "%s (%an)"
    autosquash = true
    autoStash = true
[pull]
    rebase = true
[fetch]
    prune = true

[alias]

    ab = "!git absorb"

    hide = "!git-branchless hide"
    ll = "!git-branchless smartlog"
    mov = "!git-branchless move"
    nn = "!git-branchless next"
    np = "!git-branchless prev"
    ra = "!git-branchless amend"
    rc = "!git-branchless record"
    rci = "!git-branchless record -i"
    restack = "!git-branchless restack"
    rr = "!git-branchless reword"
    rs = "!git-branchless restack"
    rw = "!git-branchless reword"
    swi = "!git-branchless switch -i"
    syn = "!git-branchless sync"

    pr = "!gh pr create"
    br = "!gh browse"
    mr = "!glab mr"

    a = add
    b = branch
    c = commit
    co = checkout
    cp = cherry-pick
    d = diff
    dc = diff --cached
    detach = checkout --detach
    dt = difftool
    dtc = difftool --cached
    f = fetch
    l = pull
    p = push
    pf = push --force-with-lease origin HEAD
    rb = rebase
    rba = rebase --abort
    rbc = rebase --continue
    rbi = rebase --interactive
    rbim = rebase master --interactive
    rh = reset --hard
    rs = restore
    s = status
    sl = "!git branch --merged | grep  -v '\\*\\|master\\|main' | xargs -n 1 -r git branch -d"
    sm = submodule
    smur =  submodule update --recursive
    smuri =  submodule update --recursive --init
    smurr =  submodule update --recursive --remote
    sta = stash
    stp = stash pop
    unstage = restore --staged
    x = "!gitx"
[init]
	defaultBranch = main
[status]
	submodulesummary = 1

[includeIf "hasconfig:remote.*.url:hub:**/**"]
	path = sign-commit
[includeIf "hasconfig:remote.*.url:hub:**/**"]
	path = personal

[includeIf "hasconfig:remote.*.url:mag:**/**"]
	path = mag
[includeIf "hasconfig:remote.*.url:maglab:**/**"]
	path = mag
